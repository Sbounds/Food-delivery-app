{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACC,IAAI,EAAC,EAAE;QACN,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAWF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAT3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB5B,41B;;;;;;;;;;;ACAA,6BAA6B,uBAAuB,uBAAuB,EAAE,iBAAiB,+CAA+C,EAAE,aAAa,kBAAkB,gBAAgB,iBAAiB,mBAAmB,EAAE,+CAA+C,urB;;;;;;;;;;;;;;;;;;;;;;;;ACAjO;AACG;AAEZ,CAAC,4CAA4C;AAC1D;AACa;AACK;AACoB;AAEhE,EAAE;AAMJ;IAKE,mBAAmB,QAAwB,EAAQ,MAAuB,EAAU,MAAc,EAAS,IAAiB,EAAS,KAAqB;QAAvI,aAAQ,GAAR,QAAQ,CAAgB;QAAQ,WAAM,GAAN,MAAM,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAa;QAAS,UAAK,GAAL,KAAK,CAAgB;QAH1J,aAAQ,GAAW,EAAE;QACrB,aAAQ,GAAW,EAAE;QACrB,aAAQ,GAAW,EAAE;IACyI,CAAC;IAE/J,oCAAgB,GAAhB;QACE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IACD,4BAAQ,GAAR;IACA,CAAC;IAED;;;;;OAKG;IAEC,iCAAa,GAAnB,UAAoB,QAAgB;;;;;4BACpB,qBAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;4BACtC,MAAM,EAAE,iBAAiB;4BACzB,MAAM,EAAC;gCACL;oCACE,IAAI,EAAC,OAAO;oCACZ,IAAI,EAAC,MAAM;oCACX,WAAW,EAAC,OAAO;iCACpB;6BACF;4BACC,OAAO,EAAC;gCACN;oCACE,IAAI,EAAC,QAAQ;oCACb,IAAI,EAAC,QAAQ;iCAEd,EAAC;oCACA,IAAI,EAAC,QAAQ;oCACb,OAAO,EAAE,cAAI;wCACX,IAAI,IAAI,GAAE,iDAAa,EAAE,CAAC;wCAC1B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC;6CACpC,IAAI,CAAC,cAAK,cAAO,CAAC,GAAG,CAAE,YAAY,CAAC,EAA1B,CAA0B,CAAC;6CACrC,KAAK,CAAC,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAApB,CAAoB,CAAC;oCAC3C,CAAC;iCACF;6BACF;yBAEF,CAAC;;wBAzBI,KAAK,GAAG,SAyBZ;wBACJ,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACrB;IAKK,yBAAK,GAAX;;;;;;wBACQ,EAAE,GAAG,sDAAkB,EAAE,CAAC;wBACxB,KAAyB,IAAI,EAA3B,QAAQ,gBAAE,QAAQ,eAAS;;;;wBAGrB,qBAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,QAAQ,CAAC;;wBAA3E,GAAG,GAAG,SAAqE;;;;wBAE/E,OAAO,CAAC,GAAG,CAAC,KAAG,CAAC;wBAChB,IAAI,KAAG,CAAC,IAAI,GAAG,oBAAoB,EAAC;4BAClC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;yBAC9B;wBACD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;;;wBAGpB,IAAI,GAAG,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;wBAEhC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;wBAC/D,qBAAM,MAAM,CAAC,GAAG,EAAE;;wBAA9B,SAAS,GAAG,SAAkB;wBACpC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAC;4BACnB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;4BAC7C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;yBAC1B;wBAEE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;wBAC9D,qBAAM,MAAM,CAAC,GAAG,EAAE;;wBAA9B,SAAS,GAAG,SAAkB;wBACpC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAC;4BACnB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;yBAC7C;wBACG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;wBAC/D,qBAAM,MAAM,CAAC,GAAG,EAAE;;wBAA9B,SAAS,GAAG,SAAkB;wBACpC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAC;4BACnB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;4BAC5C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;yBAC1B;;;;;KAGF;IAzFU,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,yFAAgC;;SAEjC,CAAC;+EAM6B,6DAAc,EAAgB,kEAAe,EAAkB,sDAAM,EAAe,yDAAW,EAAe,8DAAe;OAL/I,SAAS,CA4FrB;IAAD,gBAAC;CAAA;AA5FqB","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n   path:'',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n\\n<ion-content padding>\\n\\n  <ion-img src=\\\"../assets/icon/oxford2go.png\\\"></ion-img>\\n\\n\\n  <ion-list>\\n    <ion-item>\\n      <ion-label position = \\\"floating\\\">Email</ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]= \\\"username\\\"></ion-input>\\n  </ion-item>\\n\\n    <ion-item>\\n        <ion-label position = \\\"floating\\\">Password</ion-label>\\n        <ion-input type=\\\"password\\\" [(ngModel)]= \\\"password\\\"></ion-input>\\n      </ion-item>\\n\\n  </ion-list>\\n  <ion-button fill=\\\"solid\\\" expand=\\\"block\\\" color=\\\"success\\\" (click)=\\\"login()\\\">Login</ion-button>\\n  <ion-button expand = 'block' color = \\\"success\\\" href=\\\"/register\\\" routerDirection=\\\"forward\\\">Register</ion-button> \\n  <ion-button  expand='block' color =\\\"tertiary\\\" size = \\\"small\\\" (click)=\\\"resetPassword(username)\\\">Reset Password</ion-button>\\n\\n</ion-content>\\n\"","module.exports = \"ion-title {\\n  position: relative;\\n  text-align: center; }\\n\\nion-content {\\n  --ion-background-color: rgb(243, 243, 243); }\\n\\nion-img {\\n  height: 175px;\\n  width: auto;\\n  margin: auto;\\n  display: block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGVsYnlib3VuZHMvMzg3cHJvamVjdDIvc3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBa0I7RUFDbEIsa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksMENBQXVCLEVBQUE7O0FBRzNCO0VBQ0ksYUFBYTtFQUNiLFdBQVc7RUFDWCxZQUFZO0VBQ1osY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXRpdGxle1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmlvbi1jb250ZW50IHtcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQzLCAyNDMsIDI0Myk7XG59XG5cbmlvbi1pbWcge1xuICAgIGhlaWdodDogMTc1cHg7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { auth } from 'firebase/app';\nimport * as firebase from 'firebase/app'; // required for app->firestore communication\nimport 'firebase/firestore';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport {  MenuController, AlertController } from '@ionic/angular';\n\n  ``\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  username: string = \"\"\n  password: string = \"\"\n  userType: string = \"\"\n  constructor(public menuCtrl: MenuController,public afAuth: AngularFireAuth, private router: Router, public user: UserService,private alert:AlertController) { }\n \n  ionViewWillEnter() {\n    this.menuCtrl.enable(false);\n  }\n  ngOnInit() {\n  }\n  \n  /*resetPassword(username: string) {\n    var auth = firebase.auth();\n    auth.sendPasswordResetEmail(username)\n      .then(() => console.log(\"email sent\"))\n      .catch((error) => console.log(error))\n  }*/\n\nasync resetPassword(username: string){\n  const alert = await this.alert.create({\n  header: 'Forgot Password',\n  inputs:[\n    {\n      name:'email',\n      type:'text',\n      placeholder:'Email'\n    },\n  ],\n    buttons:[\n      {\n        text:\"Cancel\",\n        role:'cancel',\n\n      },{\n        text:'Submit',\n        handler: data=> {\n          var auth= firebase.auth();\n          auth.sendPasswordResetEmail(data.email)\n            .then(()=> console.log (\"email sent\"))\n            .catch((error) => console.log(\"error\"))\n        }\n      }\n    ]\n  \n  });\nawait alert.present();\n}\n\n\n  \n  \nasync login(){\n    let db = firebase.firestore();\n    const { username, password } = this\n    try{\n      //need to fix email thing later\n      const res = await this.afAuth.auth.signInWithEmailAndPassword(username, password)\n    } catch (err){\n        console.dir(err)\n        if (err.code = \"auth/invalid-email\"){\n          console.log(\"User Not Found\")\n        }\n        console.log(username);\n  }\n\n    const user = db.collection('users');\n\n    var query1 = user.where('user_name', '==', username).where('user_type', '==', 0);\n    const snapshot1 = await query1.get();\n    if (!snapshot1.empty){\n      this.router.navigateByUrl('/dashboard-cust');\n      console.log(\"in cus if\");\n    }\n    \n   var query2 = user.where('user_name', '==', username).where('user_type', '==', 1);\n    const snapshot2 = await query2.get();\n    if (!snapshot2.empty){\n      this.router.navigateByUrl('/dashboard-res');\n    }\n    var query3 = user.where('user_name', '==', username).where('user_type', '==', 2);\n    const snapshot3 = await query3.get();\n    if (!snapshot3.empty){\n      this.router.navigateByUrl('/dashboard-del');\n      console.log(\"in res if\");\n    }\n\n    \n  }\n\n  \n}\n\n\n\n"],"sourceRoot":""}