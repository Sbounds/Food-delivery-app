{"version":3,"sources":["webpack:///./src/app/profile/profile.module.ts","webpack:///./src/app/profile/profile.page.html","webpack:///./src/app/profile/profile.page.scss","webpack:///./src/app/profile/profile.page.ts"],"names":[],"mappings":"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","file":"profile-profile-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","module.exports = \"  <ion-header>\\n    <ion-toolbar>\\n       <ion-buttons slot=\\\"start\\\">\\n            <ion-button (click)=\\\"openFirst()\\\">\\n              <ion-icon fill=\\\"icon-only\\\" name=\\\"menu\\\">                 \\n\\n              </ion-icon>\\n            </ion-button>\\n          </ion-buttons>\\n      <ion-title text-center>Profile</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n<ion-content padding>\\n    <!--need to seperate for different users-->\\n   \\n    <div *ngIf=\\\"this.user_type=='0'\\\">\\n    <ion-item>\\n        <ion-label text-left>First Name: </ion-label>\\n        <ion-input type = \\\"text\\\" [(ngModel)]=\\\"user_firstName\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label text-left>Last Name: </ion-label>\\n        <ion-input type = \\\"text\\\" [(ngModel)]=\\\"user_lastName\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label text-left>Phone Number: </ion-label>\\n        <ion-input type = \\\"text\\\" [(ngModel)]=\\\"contactNumber\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n          <ion-label text-left>Street Address: </ion-label>\\n          <ion-input type = \\\"text\\\" [(ngModel)]=\\\"streetAddress\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label text-left>City: </ion-label>\\n          <ion-input type = \\\"text\\\" [(ngModel)]=\\\"city\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label text-left>State: </ion-label>\\n          <ion-input type = \\\"text\\\" [(ngModel)]=\\\"state\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label text-left>Zipcode: </ion-label>\\n          <ion-input type = \\\"text\\\" [(ngModel)]=\\\"zip\\\"></ion-input>\\n        </ion-item>\\n        <div>\\n        <ion-button (click) = \\\"updateUser()\\\" color = \\\"success\\\">Update Profile</ion-button>\\n       </div>\\n      <div>\\n        <ion-button (click) = \\\"updatePassword()\\\" color = \\\"success\\\">Update Password</ion-button>\\n      </div>\\n      </div>\\n\\n      <div *ngIf=\\\"this.user_type=='1'\\\">\\n        <ion-header>Personal Information</ion-header>\\n        <ion-item>\\n            <ion-label text-left>First Name: </ion-label>\\n            <ion-input type = \\\"text\\\" [(ngModel)]=\\\"user_firstName\\\"></ion-input>\\n          </ion-item>\\n          <ion-item>\\n            <ion-label text-left>Last Name: </ion-label>\\n            <ion-input type = \\\"text\\\" [(ngModel)]=\\\"user_lastName\\\"></ion-input>\\n          </ion-item>\\n          <ion-item>\\n            <ion-label text-left>Phone Number: </ion-label>\\n            <ion-input type = \\\"text\\\" [(ngModel)]=\\\"contactNumber\\\"></ion-input>\\n          </ion-item>\\n          <div>\\n          <ion-button (click) = \\\"updateUser()\\\" color = \\\"success\\\">Update Profile</ion-button>\\n       </div>\\n          <br>\\n          <ion-header>Resturant Information</ion-header>\\n          <ion-item>\\n              <ion-label text-left>Resturant Name: </ion-label>\\n              <ion-input type = \\\"text\\\" [(ngModel)]=\\\"resturantName\\\"></ion-input>\\n            </ion-item>\\n          <ion-item>\\n              <ion-label text-left>Phone Number: </ion-label>\\n              <ion-input type = \\\"text\\\" [(ngModel)]=\\\"resContactNumber\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label text-left>Street Address: </ion-label>\\n                <ion-input type = \\\"text\\\" [(ngModel)]=\\\"streetAddress\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label text-left>City: </ion-label>\\n                <ion-input type = \\\"text\\\" [(ngModel)]=\\\"city\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label text-left>State: </ion-label>\\n                <ion-input type = \\\"text\\\" [(ngModel)]=\\\"state\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label text-left>Zipcode: </ion-label>\\n                <ion-input type = \\\"text\\\" [(ngModel)]=\\\"zip\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label text-left>Description: </ion-label>\\n                <ion-input type = \\\"text\\\" [(ngModel)]=\\\"description\\\"></ion-input>\\n              </ion-item>\\n              \\n              <div>\\n              <ion-button (click) = \\\"updateRes()\\\" color = \\\"success\\\">Update Resturant</ion-button>\\n            </div>\\n            <div>\\n              <ion-button (click) = \\\"updatePassword()\\\" color = \\\"success\\\">Update Password</ion-button>\\n            </div>\\n          </div>\\n\\n         <div *ngIf=\\\"this.user_type=='2'\\\">\\n          <ion-item>\\n            <ion-label text-left>First Name: </ion-label>\\n            <ion-input type = \\\"text\\\" [(ngModel)]=\\\"user_firstName\\\"></ion-input>\\n          </ion-item>\\n          <ion-item>\\n            <ion-label text-left>Last Name: </ion-label>\\n            <ion-input type = \\\"text\\\" [(ngModel)]=\\\"user_lastName\\\"></ion-input>\\n          </ion-item>\\n\\n            <div>\\n            <ion-button (click) = \\\"updateUser()\\\" color = \\\"success\\\">Update Profile</ion-button>\\n            </div>\\n            <div>\\n              <ion-button (click) = \\\"updatePassword()\\\" color = \\\"success\\\">Update Password</ion-button>\\n            </div>\\n          </div>\\n   \\n      \\n      \\n      <!--TODO: need to allow for individuals to update their password through firebase-->\\n     \\n  </ion-content>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport{ NavController, MenuController, ToastController} from '@ionic/angular';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport {AngularFirestore} from '@angular/fire/firestore';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport * as firebase from 'firebase/app'; // required for app->firestore communication\nimport 'firebase/firestore';\nimport { Statement } from '@angular/compiler';\nimport { ResturantService } from '../resturant.service';\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\n\ninterface User{\n  user_name?: string,\n  user_id?: string,\n  res_id?:string,\n  user_type?: number,\n  user_firstName?: string,\n  user_lastName?: string,\n  contactNumber?: string,\n  streetAddress?: string,\n  city?: string,\n  state?: string,\n  zip?: number\n}\ninterface Resturant{\n  resturantName?: string,\n  resContactNumber?: string,\n  streetAddress?: string,\n  city?: string,\n  state?: string,\n  zip?: number,\n  description?: string\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n\n  \n  file\n  resPic\n  uid: string = \"\"\n  user: User\n  res: Resturant\n  user_firstName: string = \"\"\n  user_lastName: string = \"\"\n  contactNumber: string = \"\"\n  streetAddress: string = \"\"\n  city: string= \"\"\n  state: string = \"\"\n  user_type: number\n  res_id: string = \"\"\n  resContactNumber: string = \"\"\n  resturantName: string = \"\"\n  username: string = \"\"\n  zip: number\n  description: string = \"\"\n\n  constructor(private us: UserService,\n    private router: Router,\n    private afs:AngularFirestore,\n    private afAuth:AngularFireAuth,\n    public navCtrl : NavController,\n    private rs: ResturantService,\n    private menu: MenuController,\n    private toast: ToastController) { \n      \n\n\n    }\n    \n   \n  \n  async ngOnInit() {\n    this.uid = \"\";\n     let s1 = this.us.getCurrentUID().subscribe(uid=>\n      {\n        console.log(uid);\n        this.uid = uid;\n        \n        this.us.getSingleUser(uid).then(user=>\n        {\n          this.user = user;\n          console.log(this.user);\n          console.log(this.user.user_type);\n          this.user_type= this.user.user_type;\n          console.log(this.user_type);\n          if(this.user.user_type==0){\n              console.log(\"in item if\")\n              this.user_firstName = this.user.user_firstName;\n              this.user_lastName = this.user.user_lastName;\n              this.contactNumber = this.user.contactNumber;\n              this.streetAddress = this.user.streetAddress;\n              this.city= this.user.city;\n              this.state = this.user.state;\n              this.zip = this.user.zip;\n              this.username = this.user.user_name;\n\n\n          }\n          if(this.user.user_type==1){\n            this.user_firstName = this.user.user_firstName;\n            this.user_lastName = this.user.user_lastName;\n            this.contactNumber = this.user.contactNumber;\n            this.res_id = this.user.res_id;\n            this.username = this.user.user_name;\n            this.rs.getSingleResturant(this.res_id).then(res=>\n              {\n                this.res = res;\n                console.log(this.res);\n                this.resturantName = this.res.resturantName;\n                this.resContactNumber = this.res.resContactNumber;\n                this.streetAddress = this.res.streetAddress;\n                this.city = this.res.city;\n                this.state = this.res.state;\n                this.zip = this.res.zip;\n                this.description = this.res.description;\n\n              })\n\n          }\n           if(this.user.user_type==2){\n            this.user_firstName = this.user.user_firstName;\n            this.user_lastName = this.user.user_lastName;\n            this.username = this.user.user_name;\n          }\n      \n        });\n      });\n      \n  }\n  openFirst() {\n    if(this.user_type==0){\n      this.menu.enable(true, 'cmenu');\n      this.menu.toggle('cmenu');\n    }\n    if(this.user_type==1){\n      this.menu.enable(true, 'rmenu');\n      this.menu.toggle('rmenu');\n    }\n    if(this.user_type==2){\n      this.menu.enable(true, 'dmenu');\n      this.menu.toggle('dmenu');\n    }\n\n    console.log(this.menu.isOpen());\n  }\n  async updatePassword(){\n    var auth = firebase.auth();\n    console.log(this.username);\n    \n    try{\n      auth.sendPasswordResetEmail(this.username);\n      let toast = await this.toast.create({\n        message: 'an email has been sent ',\n        duration: 1000,\n        position:'top'\n      });\n      return await toast.present();\n    }catch{\n      console.log('error');\n    }\n  }\n  async setUpload(event: FileList){\n    this.file = event.item(0);\n    if(event.item(0)){\n      let reader = new FileReader();\n      reader.onload = (event:any) => {\n        this.resPic = event.target.result;\n      }\n      reader.readAsDataURL(event.item(0));\n    }\n  }\n  async updateUser(){\n    let db = firebase.firestore();\n    var userRef = db.collection('users').doc(this.user.user_id);\n\n    if(this.user.user_type==0){\n      console.log(userRef);\n      \n        return userRef.update({\n            user_firstName: this.user_firstName,\n            user_lastName: this.user_lastName,\n            contactNumbber: this.contactNumber,\n            streetAddress: this.streetAddress,\n            city: this.city,\n            state: this.state,\n            zip: this.zip\n        })\n        .then(function() {\n            console.log(\"Document successfully updated!\");\n        })\n        .catch(function(error) {\n            // The document probably doesn't exist.\n            console.error(\"Error updating document: \", error);\n        });\n    }\n    if(this.user.user_type==1){\n      \n      return userRef.update({\n          user_firstName: this.user_firstName,\n          user_lastName: this.user_lastName,\n          contactNumbber: this.contactNumber\n      })\n      \n\n      .then(function() {\n          \n      })\n      .catch(function(error) {\n          // The document probably doesn't exist.\n          console.error(\"Error updating document: \", error);\n      });\n      \n    }\n    if(this.user.user_type==2){\n      return userRef.update({\n          user_firstName: this.user_firstName,\n          user_lastName: this.user_lastName\n      })\n      .then(function() {\n          console.log(\"Document successfully updated!\");\n      })\n      .catch(function(error) {\n          // The document probably doesn't exist.\n          console.error(\"Error updating document: \", error);\n      });\n    }\n    \n\n  }\n  async updateRes(){\n    let db = firebase.firestore();\n    var resRef = db.collection('resturant').doc(this.user.res_id);\n      return resRef.update({\n        resturantName: this.resturantName,\n        resContactNumber: this.resContactNumber,\n        streetAddress: this.streetAddress,\n        city: this.city,\n        state: this.state,\n        zip: this.zip,\n        description: this.description\n      })\n      .then(function() {\n        console.log(\"Document successfully updated!\");\n      })\n      .catch(function(error) {\n        // The document probably doesn't exist.\n        console.error(\"Error updating document: \", error);\n      });\n  }\n\n\n}\n"],"sourceRoot":""}